@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Service Request";

}

@model CareConnect.Models.TrackingGenerateViewModel
@Html.ValidationSummary(true)

@* <div class="card">
    <div class="card-header" style="background-color: #0565B7;color:white">
        <h3 class="card-title">Booking Detail</h3>
    </div>
    <div class="card-body">
        <!-- Loop through the rows of the first dataset -->
        @foreach (System.Data.DataRow row in Model.BookingDetail.Tables[0].Rows)
        {
            <div class="row">
                @foreach (System.Data.DataColumn column in Model.BookingDetail.Tables[0].Columns)
                {
                    if (Model.BookingDetail.Tables[0].Columns.Contains(column.ColumnName))
                    {
                        <div class="col-md-2 col-sm-2">
                            <div class="form-group">
                                <label class="control-label">@column.ColumnName:</label>

                                <input type="text" disabled class="form-control" value="@row[column.ColumnName]" id="@column.ColumnName" />

                            </div>
                        </div>
                    }
                }
            </div>
        }
    </div>
</div> *@




<div class="card">
    <div class="card-header" style="background-color: #0565B7;color:white">
        <h3 class="card-title">Create Ticket</h3>
    </div>
    <div class="card-body">
        <!-- Render the dropdown list with TicketCatType data -->

        <div class="row">


            <div class="col-md-auto col-12">
                <label for="TicketTypeDropdown">Ticket Category:</label>
                <select class="form-control" id="categoryDropdown" name="ticketcatagory">
                    <option value="">Select Category</option>
                    @foreach (System.Data.DataRow catRow in Model.TicketCatType.Tables[1].Rows)
                    {
                        // Check if the CategoryDescription is "Service Request"
                        if (!string.Equals(catRow["CategoryDescription"].ToString(), "Complaints", StringComparison.OrdinalIgnoreCase))

                        {
                            <option value="@catRow["CategoryId"]">@catRow["CategoryDescription"]</option>
                        }
                    }
                </select>

                <span class="text-danger" id="categoryDropdownError" style="display: none;">Please select Category.</span>
            </div>

            <div class="col-md-auto col-12">

                <div id="subcategoryContainer">
                </div>
                <span class="text-danger" id="subcategoryDropdownError" style="display: none;">Please select Sub Category.</span>
            </div>
            <div class="col-md-auto col-12">

                <div id="2subcategoryContainer">
                </div>
                <span class="text-danger" id="2subcategoryDropdownError" style="display: none;">Please select Info Sub Category.</span>
            </div>
            <div class="col-md-3 col-md-3 col-sm-3">
                <div class="form-group">
                    <label for="TicketTypeDropdown">Remarks:</label>

                    <input type="text" id="txtremarks" name="Remarks" class="form-control" placeholder="Enter Remarks">
                    <span class="text-danger" id="RemarksError" style="display: none;">Please Enter Remarks.</span>
                </div>
            </div>

        </div>
        <div class="row">

            <div class="col-md-auto col-12">
                <button class="btn btn-success float-Right" id="btnCreateTicket">Create Ticket</button>

            </div>
        </div>

    </div>

</div>
<script>
    debugger
    function handleDropdownChange(selectElement) {
        debugger
        $('#2subcategoryContainer').html('');
        // Get the selected value
        var selectedValue = selectElement.value;

        // Do something with the selected value
        console.log("Selected value: " + selectedValue);

        if (selectedValue === '48') {
            $('#2subcategoryContainer').html('');

            debugger
            // Make AJAX call to fetch subcategories based on the selected category
            $.ajax({
                url: '/Home/Get2SubcategoriesInfo',
                type: 'POST',
                data: { subcategory: selectedValue },
                success: function (result) {
                    debugger
                    // Render the subcategory dropdown
                    $('#2subcategoryContainer').html(result);
                },
                error: function (xhr, status, error) {
                    Swal.fire('Error', 'Please Select Valid Category: ' + error, 'error');
                }
            });
        }
        // You can perform any additional actions here based on the selected value
    }
</script>

<script>
    $(document).ready(function () {

        // Event listener for category selection
        $('#categoryDropdown').change(function () {
            var selectedCategory = $(this).val();

            // Clear the subcategory container
            $('#subcategoryContainer').html('');

            debugger
            // Make AJAX call to fetch subcategories based on the selected category
            $.ajax({
                url: '/Home/GetSubcategoriesServiceRequest',
                type: 'POST',
                data: { category: selectedCategory },
                success: function (result) {
                    // Render the subcategory dropdown
                    $('#subcategoryContainer').html(result);
                },
                error: function (xhr, status, error) {
                    Swal.fire('Error', 'Please Select Valid Category: ' + error, 'error');
                }
            });
        });



        $('#CityDropdown').change(function () {
            debugger
            var selectedCity = $(this).val();

            // Clear the subcategory container
            $('#regionContainer').html('');

            debugger

            // Make AJAX call to fetch subcategories based on the selected category
            $.ajax({
                url: '/Home/GetRegion',
                type: 'POST',
                data: { CityID: selectedCity },
                success: function (result) {
                    debugger
                    // Render the subcategory dropdown
                    $('#regionContainer').html(result);
                },
                error: function (xhr, status, error) {
                    Swal.fire('Error', 'Please Select Valid Category: ' + error, 'error');
                }
            });
        });


    });
</script>


<script>
    $(document).ready(function () {
        $('#btnCreateTicket').click(function () {
            debugger
            var barcodeValue = $('#BarcodeDropdown').val();
            var tickettypeValue = $('#TicketTypeDropdown').val();
            var categoryValue = $('#categoryDropdown').val();
            var ticketsubcatagory = $('#subcategoryContainer').find('#SubcategoryDropdown').val();
            var infosubcatagoryid = $('#2subcategoryContainer').find('#infoSubcategoryDropdown').val();
            var ticketsubcatagoryName = $('#subcategoryContainer').find('#SubcategoryDropdown option:selected').text();
            var infosubcatagoryName = $('#2subcategoryContainer').find('#infoSubcategoryDropdown option:selected').text();
            var RemarksValue = $('#txtremarks').val();
            var TicketDescription = $('#txtremarks').val();
            var TicketPriority = $('#PriorityDropdown').val();
            var City = $('#CityDropdown').val();
            var region = $('#regionContainer').find('#RegionDropdown').val();

            var UserEmail = $('#regionContainer').find('#useremail option:selected').text();
            // var TrackingNO = @ViewData["TrackingNumber"];



            var name = $('#txtname').val();
            var contact = $('#txtcontactno').val();
            var dropdown = document.getElementById("categoryDropdown");
            var selectedOption = dropdown.options[dropdown.selectedIndex];
            var TicketCategoryName = selectedOption.text;
            debugger
            var pattern = /^92\d{10}$/;



            if (categoryValue === '') {
                $('#categoryDropdownError').show();
                return false; // Prevent form submission if barcode is not selected
            } else {
                $('#categoryDropdownError').hide();
            }
            if (ticketsubcatagory === '0') {
                $('#subcategoryDropdownError').show();
                return false; // Prevent form submission if barcode is not selected
            } else {
                $('#subcategoryDropdownError').hide();
            }

            if (infosubcatagoryid === '0') {
                $('#2subcategoryDropdownError').show();
                return false; // Prevent form submission if barcode is not selected
            } else {
                $('#2subcategoryDropdownError').hide();
            }




            if (RemarksValue === '') {
                $('#RemarksError').show();
                return false; // Prevent form submission if barcode is not selected
            } else {
                $('#RemarksError').hide();
            }
            //const checkbox = document.getElementById("chksendsms");

            // Get the value (true or false) from the checkbox
            const isChecked = false;
            debugger
            var ticketData = {

                tickettype: $('#TicketTypeDropdown').val(),
                barcode: $('#BarcodeDropdown').val(),
                ticketsubcatagory: $('#subcategoryContainer').find('#SubcategoryDropdown').val(),
                infosubcatagoryid: $('#2subcategoryContainer').find('#infoSubcategoryDropdown').val(),
                ticketsubcatagoryName: ticketsubcatagoryName,
                infosubcatagoryName: infosubcatagoryName,
                name: $('#txtname').val(),
                contact: '',
                Gender: $('#ddgender').val(),
                issendsms: isChecked,
                priority: $('#PriorityDropdown').val(),
                city: $('#CityDropdown').val(),
                region: '',
                UserEmail: '',
                //cgnno: @ViewData["TrackingNumber"],
                Product: $('#Product').val(),
                accountno: $('#Product').val(),
                agent: $('#Product').val(),
                agentref: $('#Product').val(),
                BookingDate: new Date().toLocaleDateString(),
                sender: '',
                sendercompany: '',
                senderref: '',
                senderphone: '',
                senderaddress: '',
                Origin: $('#Origin').val(),
                Origin_Desc: $('#Origin_Desc').val(),
                receiver: '',
                receivercompany: '',
                receiverphone: '',
                receiveraddress: '',
                Destination: $('#Destination').val(),
                Destination_Desc: $('#Destination_Desc').val(),
                Payment_Mode: $('#Payment_Mode').val(),
                Weight: $('#Weight').val(),
                pieces: $('#Pieces').val(),
                Quantity: $('#Quantity').val(),
                ticketcatagory: $('#categoryDropdown').val(),
                ticketcatagoryName: TicketCategoryName,
                Remarks: $('#txtremarks').val(),

            };
            debugger
            $.ajax({
                url: '/Home/CreateTicketServiceRequest',
                type: 'POST',
                data: ticketData,
                success: function (response) {
                    debugger
                    // Check if the ticket was created successfully
                    if (response.success) {
                        // Show a success message using SweetAlert
                        Swal.fire('Success', response.message, 'success');
                        var ticketno = response.data;
                     
                        $('#categoryDropdown').val(''),
                           
                            $('#txtremarks').val('')
                    }
                    else {
                        // Show an error message using SweetAlert
                        Swal.fire('Error', 'Error Creating Ticket:   \n ' + response.error, 'error');
                    }
                },
                error: function (xhr, status, error) {
                    // Show an error message using SweetAlert
                    Swal.fire('Error', 'Error creating ticket: ' + error, 'error');
                }
            });
        });
    });
</script>




